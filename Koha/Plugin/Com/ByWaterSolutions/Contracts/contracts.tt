[% USE raw %]
[% USE Asset %]
[% SET footerjs = 1 %]
[% USE AuthorisedValues %]
[% INCLUDE 'doc-head-open.inc' %]
  <title>Koha: Contracts plugin: Search contracts</title>
  [% INCLUDE 'doc-head-close.inc' %]
</head>

<body id="plugin_contracts">
    [% INCLUDE 'header.inc' %]
    [% INCLUDE 'cat-search.inc' %]

    [% WRAPPER 'sub-header.inc' %]
        [% WRAPPER breadcrumbs %]
            [% IF blocking_error %]
                [% WRAPPER breadcrumb_item bc_active= 1 %]
                    <span>Plugins</span>
                [% END %]
            [% ELSE %]
                [% WRAPPER breadcrumb_item %]
                    <a href="/cgi-bin/koha/plugins/plugins-home.pl">Plugins</a>
                [% END %]
                [% WRAPPER breadcrumb_item bc_active= 1 %]
                    <span>Contracts plugin</span>
                [% END %]
            [% END %]
        [% END #/ WRAPPER breadcrumbs %]
    [% END #/ WRAPPER sub-header.inc %]

    <div class="main container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <main>

                <div id="contracts_list">
                    <h2>Contracts</h2>
                        [% IF (can_manage_contracts) %]
                            <a id="new_contract" class="btn btn-default btn-xs" data-contract_id="new" data-contract_number="">
                            <i class="fa fa-plus"></i> New contract
                            </a>
                        [% END %]
                    <table id="contracts_table">
                        <thead>
                            <tr>
                                <th>Contract Number</th>
                                <th>Supplier Id</th>
                                <th>Permissions</th>
                                <th>Resources</th>
                                <th>Info</th>
                                [% IF (can_manage_contracts) %]<th>&nbsp;</th>[% END %]
                            </tr>
                        </thead>
                    </table>
                </div>

                </main>
            </div> <!-- /.col-sm-10.col-sm-push-2 -->

         </div> <!-- /.row -->

        <div id="edit_contract_modal" class="modal" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 id="search_filters_label">Edit contract: <span id="contract_edit_modal_name"></span</h1>
                    <button type="button" class="closebtn" data-bs-dismiss="modal" aria-hidden="true">x</button>
                </div>
                <div class="modal-body">
                    <div class="contract-edit" data-type="update_contract">
                    <fieldset class="rows">
                        <legend>Contract</legend>
                        <ul>
                            <li>
                                <input type="hidden" id="contract_edit_id" name="contract_edit_id">
                                <label for="contract_edit_number">Number:</label>
                                <input id="contract_edit_number" name="contract_edit_number" type="text" class="contract_update">
                            </li>
                            <li>
                                <label  for="vendor_select">Copyright holder</label>
                                <select name="vendor_selector" id="vendor_select" class="contract_update">
                                </select>
                            </li>
                        </ul>
                        <div id="contract_updated"></div>
                    </fieldset>
                    <hr>
                    </div>
                    <fieldset id="permissions_editor">
                    </fieldset>
                    <a id="new_permission" class="btn btn-default btn-xs new_permission">Add permission</a>
                </div>
                <div class="modal-footer">
                    <a href="#" data-bs-dismiss="modal" aria-hidden="true" class="cancel">Close</a>
                </div>
            </div>
            </div>
        </div>
        <div id="add_resource_modal" class="modal" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 id="search_biblios_label">Add resource to Permission #<span id="permission_resource"></span>: <span id="contract_edit_modal_name"></span</h1>
                    <button type="button" class="closebtn" data-bs-dismiss="modal" aria-hidden="true">x</button>
                </div>
                <div class="modal-body">
                    <div class="resource_search">
                        <table id="biblios_table" width="100%">
                            <thead><tr>
                                <th>Id</th>
                                <th>Title</th>
                                <th>Author</th>
                                <th>ISBN</th>
                                <th>Publisher</th>
                                <th>Action</th>
                            </tr></thead>
                        </table>
                    </div>
                </div>
                <div class="modal-footer">
                    <a href="#" data-bs-dismiss="modal" aria-hidden="true" class="cancel">Close</a>
                </div>
            </div>
        </div>
    </div>

[% MACRO jsinclude BLOCK %]
    [% Asset.js("js/admin-menu.js") | $raw %]
    [% Asset.css("css/humanmsg.css") | $raw %]
    [% Asset.js("lib/jquery/plugins/humanmsg.js") | $raw %]
    [% INCLUDE 'datatables.inc' %]
    [% INCLUDE 'select2.inc' %]
    [% INCLUDE 'calendar.inc' %]

    <script>
        $.getScript("/intranet-tmpl/lib/dayjs/dayjs.min.js");
        let filters_table;
        function tempAlert(id,msg,duration) {
            let el = $("#"+id);
            el.text(msg);
            setTimeout(function(){
             el.text("");
            },duration);
        }

        $(document).ready(function(){

            ContractFunctions.v_select($("#vendor_select"));
            biblios_table = $("#biblios_table").kohaTable({
                "ajax": {
                    "url": "/api/v1/contrib/contracts/biblios"
                },
                "stateSave": true,
                "embed": ["biblioitem","items"], 
                "columns": [
                    {
                        "data": "biblio_id",
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        "data": "title:subtitle",
                        "searchable": true,
                        "orderable": true,
                        "render": function( data, type, row, meta ) {
                            let sub = row.subtitle ? row.subtitle : "";
                            let complete_title = '<a target="_blank" href="/cgi-bin/koha/catalogue/detail.pl?biblionumber=' + row.biblio_id + '">';
                            complete_title += row.title + " " + sub;
                            complete_title += '</a>';
                            return complete_title;
                        }
                    },
                    {
                        "data": "author",
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        "data": "biblioitem.isbn",
                        "searchable": true,
                        "orderable": true,
                    },
                    {
                        "data": "biblioitem.publisher",
                        "searchable": true,
                        "orderable": true,
                    },
                    {
                        "data": "biblionumber",
                        "searchable": false,
                        "orderable": false,
                        "render": function( data, type, row, meta ) {
                            let add_button = '<a class="btn btn-default btn-xs add_new_resource" data-biblionumber="';
                            add_button += row.biblio_id + '">Add resource</a>';
                            return add_button;
                        }

                    }

                ]
            }, null, 1);

            contracts_table = $("#contracts_table").kohaTable({
                "ajax": {
                    "url": "/api/v1/contrib/contracts/contracts"
                },
                "stateSave": true,
                "embed": ["copyright_holder","permissions.resources.biblio"], 
                "columns": [
                    {
                        "data": "contract_number",
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        "data": "copyright_holder.id:copyright_holder.name:copyright_holder.notes",
                        "searchable": true,
                        "orderable": true,
                        "render": function( data, type, row, meta ) {
                            var supplier = "";
                            if( row.copyright_holder ){
                                let ch = row.copyright_holder;
                                supplier += '<a target="_blank" href="/cgi-bin/koha/acqui/supplier.pl?booksellerid=' + ch.id + '">';
                                supplier += ch.name;
                                supplier += '</a>';
                                supplier += " ("+ch.id+")</br>";
                                supplier += ch.notes ? ch.notes : "";
                            } else {
                                supplier += "(" + row.supplier_id + ")";
                            }
                            return supplier;
                        }
                    },
                    {
                        "data": "permissions.permission_id:permissions.permission_type",
                        "searchable": true,
                        "orderable": true,
                        "render": function( data, type, row, meta ) {
                            var perms ='';
                            row.permissions.forEach(function(e){
                                perms +='<ul title="'+e.permission_id+'">';
                                perms += '<li>Permission number: ' + e.permission_id + '</li>';
                                perms += '<li>' + e.permission_type + '</li>';
                                perms += '<li>' + e.permission_code + '</li>';
                                perms += '<li>Permission date: ' + escape_str(dayjs(e.permission_date).format('MMMM DD, YYYY')) + '</li>';
                                perms += '<li>Signed: ' + (e.form_signed?"Yes":"No") + '</li>';
                                perms += e.note ? ('<li>Note: ' + e.note + '</li>') : "";
                                [% IF biblionumber %]
                                    let biblionumber="[% biblionumber | html %]";
                                    let bib_linked = false;
                                    e.resources.forEach(function(r){
                                        if( r.biblionumber == biblionumber ){ bib_linked=true;return false; }
                                    });
                                    if( !bib_linked ){
                                       perms += '<a class="btn btn-default btn-xs link_resource" data-biblionumber="[% biblionumber %]" data-permission_id="'+e.permission_id+'">Link to bib ([% biblionumber | html %])</a>';
                                    }
                                [% END %]
                                perms += '</ul></br><hr>';
                            });
                            return perms;
                        },
                    },
                    {
                        "data": "permissions.resources.biblionumber:permissions.resources.resource_id:permissions.resources.biblio.title:permissions.resources.biblio.author",
                        "searchable": true,
                        "orderable": true,
                        "render": function( data, type, row, meta ) {i
                            var resources ="";
                            row.permissions.forEach(function(e){
                                resources += '<ul title="Permission '+e.permission_id+'">';
                                let init_hidden = "";
                                let more_button = false;
                                e.resources.forEach(function(r,index){
                                    if( index > 2 ){ 
                                        init_hidden = 'class="extra_resource" style="display:none;"'
                                        more_button = true;
                                    }
                                    resources += '<li '+init_hidden+'><ul class="contract_resource">';
                                    resources += '<li>' + '<a target="_blank" href="/cgi-bin/koha/catalogue/detail.pl?biblionumber='+ r.biblionumber + '">';
                                    resources += (r.biblio?r.biblio.title:'Title not found');
                                    resources += "(" + r.biblionumber + ")</a></li>";
                                    resources += "<li>" + (r.biblio?(r.biblio.author?r.biblio.author:"-"):"-") + "</li>";
                                    resources += '</ul></li>';
                                });
                                if( more_button ){
                                    resources += '<a class="btn btn-default btn-xs show_extra_resources extra_resource">Show all ('+e.resources.length+')</a>';
                                    resources += '<a class="btn btn-default btn-xs show_extra_resources extra_resource" style="display:none;">Hide extra</a>';
                                    }
                                resources += '</ul>';
                                [% IF (can_manage_contracts) %]
                                    resources += '<a class="btn btn-default btn-xs add_resource" data-permission_id="';
                                    resources += e.permission_id + '">Add resource (';
                                    resources += e.permission_id + ')</a>';
                                [% END %]
                                resources += "<hr>";
                            });
                            return resources;
                        },
                    },
                    {
                        "data": "created_user:updated_user:created_on:updated_on",
                        "searchable": true,
                        "orderable": false,
                        "render": function( data, type, row, meta ) {
                            let c_info = "Created: ";
                            let created = row.created_on ? escape_str(dayjs(row.created_on).format('MMMM DD, YYYY')) : "";
                            let updated = row.updated_on ? escape_str(dayjs(row.updated_on).format('MMMM DD, YYYY')) : "";
                            let link_start = '<a target="_blank" href="/cgi-bin/koha/members/moremember.pl?borrowernumber=';
                            c_info += created + '(' + link_start + row.created_user + '">' + row.created_user + '</a>)</br>';
                            c_info += "Updated: "; 
                            c_info += updated + '(' + link_start + row.updated_user + '">' + row.updated_user + '</a>)';
                            return c_info;
                        }
                    [% IF (can_manage_contracts) %]
                    },
                    {
                        "data": function( row, meta, val, type ) {
                            let contract = row;
                            let contract_buttons = '<a class="btn btn-default btn-xs edit_contract" ';
                            contract_buttons += ' data-contract_id="'+ contract.contract_id;
                            contract_buttons += '" data-contract_number="'+ contract.contract_number;
                            contract_buttons += '" ><i class="fa fa-pencil"></i> Edit contract</a>';
                            contract_buttons += '<a class="btn btn-default btn-xs delete_contract"';
                            contract_buttons += ' data-contract_id="'+ contract.contract_id;
                            contract_buttons += '"><i class="fa fa-trash"></i> Delete</a>';
                            return contract_buttons;
                        },
                        "searchable": false,
                        "orderable": false
                    [% END %]
                    }
                ]
            }, null, 1);

            $("body").on('change', '.contract_update',function() {
                let parent_form = $(this).closest('div');
                let parent_type = parent_form.data('type');
                ContractFunctions[parent_type](parent_form);
            });
            $("body").on('change', 'select.permission_type',function() {
                let parent_form = $(this).closest('div');
                let parent_type = parent_form.data('type');
                parent_form.find('input[name=permission_edit_code]').val( $(this).val() );
                ContractFunctions[parent_type](parent_form);
            });
            $("body").on('click', '.contract_update_button',function() {
                let parent_form = $(this).parent('div');
                let parent_type = parent_form.data('type');
                ContractFunctions[parent_type](parent_form);
            });
            $("body").on('click', '.link_resource',function() {
                let permission_id = $(this).data('permission_id');
                let biblionumber = $(this).data('biblionumber');
                ContractFunctions.add_resource(permission_id,biblionumber);
            });
            $("#new_contract").click(function(){
                $("#permissions_editor").html("");
                $("#new_permission").hide();
                ContractFunctions.edit_contract(this);
            });
            $("body").on('click',".edit_contract",function() {
                $("#permissions_editor").html("");
                $("#new_permission").show();
                ContractFunctions.edit_contract(this);
            });
            $("#new_permission").click(function(){
                ContractFunctions.add_permissions([{
                    contract_id  : $(this).data('contract_id'),
                    permission_id: "new",
                    permission_type: "Permission Granted",
                    permission_code: "A1 B1a C1 D2 E1 F1 G2 H2 I1 J1 K3",
                    form_signed: 0,
                    note: ""
                }]);
            });
            $("body").on('click', '.delete_contract',function() {
                    let element = $(this);
                    if( window.confirm('Do you want to delete this contract? Doing so will remove all associated permissions and resources (title will not be deleted)') ){
                        ContractFunctions.delete_contract(element);
                    }
            });
            $("body").on('click', '.delete_permission',function() {
                    let element = $(this).parent('div');
                    if( window.confirm('Do you want to delete this resource?') ){
                        ContractFunctions.delete_permission(element);
                    }
            });
            $("body").on('click', '.delete_resource',function() {
                    let element = $(this).parent('li');
                    if( window.confirm('Do you want to delete this resource?') ){
                        ContractFunctions.delete_resource(element);
                    } 
            });
            $("body").on('click', '.add_resource',function() {
                let cur_per = $(this).data('permission_id');
                $("#permission_resource").data('permission_id',cur_per).text(cur_per);
                $("#add_resource_modal").modal('show');
            });
            $("body").on('click', '.add_new_resource',function() {
                let biblionumber = $(this).data('biblionumber');
                let permission_id = $("#permission_resource").data('permission_id');
                ContractFunctions.add_resource(permission_id,biblionumber);
            });
            $("body").on('click', '.show_extra_resources',function() {
                $(this).closest('ul').children('.extra_resource').toggle();
            });
                

        });

        var ContractFunctions = {

            display_vendor: function (state) {
                var $text;
                $text = $('<span>'+state.text+'</span>');
                return $text;
            },

            v_select: function(element) {

            element.kohaSelect({
                width: '30%',
                allowClear: false,
                ajax: {
                   url: '/api/v1/acquisitions/vendors',
                   delay: 300,
                   cache: true,
                   dataType: 'json',
                   data: function (params) {
                       var search_term = (params.term === undefined) ? '' : params.term;
                       var query = {
                           "q": JSON.stringify({"name":{"-like":'%'+search_term+'%'}}),
                           "_order_by": "name",
                           "_page": params.page
                        };

                        return query;
                    },
                    processResults: function (data) {
                        var results = [];
                        data.results.forEach( function ( vendor ) {
                            results.push(
                                {
                                    "id": "" + vendor.id.escapeHtml(),
                                    "text": vendor.name.escapeHtml()
                                }
                            );
                        });
                        return { "results": results, "pagination": { "more": data.pagination.more } };
                    }
                },
                templateResult: ContractFunctions.display_vendor
            });
               return element;
            },
            add_resource: function(permission_id,biblionumber){
                let options = {
                    url: '/api/v1/contrib/contracts/resources/',
                    method: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({
                        permission_id: permission_id,
                        biblionumber: biblionumber
                    })
                };
                $.ajax(options)
                    .then(function(result) {
                        humanMsg.displayAlert( _("Resource successfuly linked."), { className: 'human Success' } );
                        contracts_table.DataTable().ajax.reload();

                    })
                    .fail(function(err) {
                        humanMsg.displayAlert( _("There was an error linking the resource") + err.responseText, { className: 'humanError' } );
                    });
            },

            edit_contract:  function(element){
                let contract_id = $(element).data('contract_id');
                let contract_number = $(element).data('contract_number');

                if ( contract_id != "new" ){
                let options = {
                    url: '/api/v1/contrib/contracts/contracts',
                    method: "GET",
                    contentType: "application/json",
                    headers: { 'x-koha-embed': ["permissions.resources.biblio","copyright_holder"] },
                    data: 'q=[{"me.contract_id":'+contract_id+'}]'
                };
                $.ajax(options)
                    .then(function(result) {
                        result = result[0];
                        $("#contract_edit_number").val(result.contract_number);
                        $("#contract_edit_id").val(result.contract_id);
                        if(result.copyright_holder){
                        $("#vendor_select").select2('destroy');
                            $("#vendor_select").html(''); 
                            $("#vendor_select").append('<option value="'+result.supplier_id+'" selected="selected">'+result.copyright_holder.name+'</option>');
                        ContractFunctions.v_select($("#vendor_select"));
                        }
                        ContractFunctions.add_permissions( result.permissions );
                        $("#new_permission").data('contract_id',result.contract_id).show();
                        $("#edit_contract_modal").modal('show');

                    })
                    .fail(function(err) {
                        humanMsg.displayAlert( _("There was an error fetching the contract") + err.responseText, { className: 'humanError' } );
                    });
                } else {
                        $("#contract_edit_number").val("new");
                        $("#contract_edit_id").val("new");
                        $("#edit_contract_modal").modal('show');
                }

            },

            delete_contract: function(element){
                let contract_id = $(element).data('contract_id');
                let options = {
                    url: '/api/v1/contrib/contracts/contracts/' + contract_id,
                    method: "DELETE",
                    contentType: "application/json",
                };
                $.ajax(options)
                    .then(function(result) {
                        humanMsg.displayAlert( _("Contract successfully deleted."), { className: 'human Success' } );
                        contracts_table.DataTable().ajax.reload();
                    })
                    .fail(function(err) {
                        humanMsg.displayAlert( _("There was an error during deletion:") + err.responseText, { className: 'humanError' } );
                    });
            },

            delete_permission: function(element){
                let permission_id = $(element).data('permission_id');
                let options = {
                    url: '/api/v1/contrib/contracts/permissions/' + permission_id,
                    method: "DELETE",
                    contentType: "application/json",
                };
                $.ajax(options)
                    .then(function(result) {
                        let permission_id = $(element).find('input[name="permission_edit_id"]').val();
                        element.remove();
                        humanMsg.displayAlert( _("Permission successfully deleted."), { className: 'human Success' } );
                        contracts_table.DataTable().ajax.reload();
                    })
                    .fail(function(err) {
                        humanMsg.displayAlert( _("There was an error during deletion:") + err.responseText, { className: 'humanError' } );
                    });
            },

            delete_resource: function(element){
                let resource_id = $(element).data('resource_id');
                let options = {
                    url: '/api/v1/contrib/contracts/resources/' + resource_id,
                    method: "DELETE",
                    contentType: "application/json",
                };
                $.ajax(options)
                    .then(function(result) {
                        element.remove();
                        humanMsg.displayAlert( _("Permission successfully deleted."), { className: 'human Success' } );
                        contracts_table.DataTable().ajax.reload();
                    })
                    .fail(function(err) {
                        humanMsg.displayAlert( _("There was an error during deletion:") + err.responseText, { className: 'humanError' } );
                    });
            },

            update_contract: function(element){
                let contract_id = $(element).find('input[name="contract_edit_id"]').val();
                var url = '/api/v1/contrib/contracts/contracts';
                var method = "PUT";
                if( contract_id == 'new' ){
                    method = "POST";
                } else {
                    url = url + '/' + contract_id
                }
                let contract_number = $(element).find('input[name="contract_edit_number"]').val();
                let supplier_id =     $(element).find('#vendor_select').val();
                let options = {
                    url: url,
                    method: method,
                    contentType: "application/json",
                    data: JSON.stringify({
                        contract_number: contract_number,
                        supplier_id: supplier_id?supplier_id:"",
                    })
                };
                $.ajax(options)
                    .then(function(result) {
                        $(element).find('input[name="contract_edit_id"]').val(result.contract_id);
                        if( method == 'POST' ){
                            $("#new_permission").data('contract_id',result.contract_id).show();
                        }
                        tempAlert("contract_updated","Contract updated",1000);
                        contracts_table.DataTable().ajax.reload();
                    })
                    .fail(function(err) {
                        humanMsg.displayAlert( _("There was an error during update:") + err.responseText, { className: 'humanError' } );
                    });
            },

            update_permission: function(element){
                let permission_id = $(element).find('input[name="permission_edit_id"]').val();
                var url = '/api/v1/contrib/contracts/permissions';
                var method = "PUT";
                if( permission_id == 'new' ){
                    method = "POST";
                } else {
                    url = url + '/' + permission_id
                }
                let contract_id = $(element).find('input[name="contract_edit_id"]').val();
                let permission_type = $(element).find('select[name="permission_edit_type"] option:selected').text();
                let permission_code = $(element).find('input[name="permission_edit_code"]').val();
                let permission_date = $(element).find('input[name="permission_edit_date"]').val();
                let contract_signed = $(element).find('input[name="permission_edit_signed"]').is(':checked')?1:0;
                let note            = $(element).find('textarea[name="permission_edit_note"]').val();
                let options = {
                    url: url,
                    method: method,
                    contentType: "application/json",
                    data: JSON.stringify({
                        contract_id    : contract_id,
                        permission_type: permission_type,
                        permission_date: permission_date,
                        permission_code: permission_code,
                        form_signed:     contract_signed,
                        note:            note
                    })
                };
                $.ajax(options)
                    .then(function(result) {
                        $(element).find('input[name="permission_edit_id"]').val(result.permission_id);
                        tempAlert("permission_updated_"+permission_id,"Permission updated",1000);
                        contracts_table.DataTable().ajax.reload(null,false);
                    })
                    .fail(function(err) {
                        humanMsg.displayAlert( _("There was an error during update:") + err.responseText, { className: 'humanError' } );
                    });
            },

            add_permissions: function( permissions ){
                        [%# SET perm_types = AuthorisedValues.GetAuthValueDropbox( 'PERMISSION_TYPES' ) %]
                        [% SET perm_types = [
                            { authorised_value = "A1 B1a C1 D2 E1 F1 G2 H2 I1 J1 K3a M3a N4a U4a U4r U4c U5a U5r U5c U5e U5f U6a U6r U6c U7a U7r U7c U7e U7f V3" lib = "Limited Permission Granted" }
                            { authorised_value = "A1 B4b C1 D2 E1 F9 G2 H2 I1 J1 K2j M3a N4a U4b U4s U4d U5b U5s U5d U5g U6b U6s U6d U7b U7s U7d U7g V2j" lib = "Protected" }
                            { authorised_value = "" lib = "Contract Conditions" }
                            { authorised_value = "A1 B8a C1 D2 E1 F2a F2b G2 H2 I1 J9 K2h M3a N4a P1 P4 P13 P15 U4b U4s U4d U5b U5s U5d U5g U6b U6s U6d U7b U7s U7d U7g V2h" lib = "Permission Denied" }
                            { authorised_value = "A1 B1a C1 D1 E1 F1 G1 H1 I1 J1 K3 M1 N1 U4a U4r U4c U5a U5r U5c U5e U5f U6a U6r U6c U7a U7r U7c U7e U7f V3" lib = "Permission Granted" }
                            { authorised_value = "A1 B1a C1 D1 E1 F1 G1 H1 I1 J1 K1 M1 N1 U4a U4r U4c U5a U5r U5c U5e U5f U6a U6r U6c U7a U7r U7c U7e U7f V1" lib = "Public Domain, No Notice" }
                            { authorised_value = "A1 B1a C1 D1 E1 F1 G1 H1 I1 J1 K1 M1 N1 U4a U4r U4c U5a U5r U5c U5e U5f U6a U6r U6c U7a U7r U7c U7e U7f V1" lib = "Public Domain" }
                        ] %]
                        [% IF perm_types.size %]
                            [% SET perm_dropdown = '' %]
                            [% FOREACH perm IN perm_types %]
                                 [% perm_dropdown = perm_dropdown _ '<option value="' _ perm.authorised_value _ '">' _ perm.lib _ '</option>' %]
                            [% END %]
                            [% SET perm_dropdown = perm_dropdown _ '</select>' %]
                        [% ELSE %]
                            [% SET perm_dropdown = '<input class="permission_type" class="contract_updated">' %]
                        [% END %]

                        let permissions_section = '<hr>';
                        permissions.forEach(function(p,index){
                            permissions_section += '<div class="permission-edit" data-type="update_permission"'
                            permissions_section += 'data-permission_id="' + p.permission_id + '">';
                            permissions_section += '<fieldset class="rows"><legend>Permission '+ p.permission_id +'</legend><ul>';
                            permissions_section += '<input type="hidden" id="contract_edit_id" name="contract_edit_id" value="'+p.contract_id+'">';
                            permissions_section += '<input type="hidden" class="permission_edit_id" name="permission_edit_id" value="'+p.permission_id+'">';
                            permissions_section += '<li>';
                            permissions_section += '<label for="permission_edit_type">Permission type:</label>';
                            [% IF perm_types.size %]
                            permissions_section += '<select class="permission_type" name="permission_edit_type" data-initial="'+p.permission_code+'">'
                            [% END %]
                            permissions_section += '[% perm_dropdown %]'
                            permissions_section += '</li>';
                            permissions_section += '<li>';
                            permissions_section += '<label for="permission_edit_code">Permission Code:</label>';
                            permissions_section += '<input name="permission_edit_code" type="text" size="100" class="contract_update permission_edit_code" value="'+p.permission_code +'">';
                            permissions_section += '</li>';
                            permissions_section += '<li>';
                            permissions_section += '<label for="permission_edit_date">Permission date:</label>';
                            permissions_section += '<input name="permission_edit_date" type="text" class="contract_update permission_edit_date" value="'+p.permission_date +'">';
                            permissions_section += '</li>';
                            permissions_section += '<li>';
                            permissions_section += '<label for="permission_edit_signed">Contract signed:</label>';
                            let checked = p.form_signed?'checked="checked"':'';
                            permissions_section += '<input name="permission_edit_signed" type="checkbox" ' +checked + ' class="contract_update">';
                            permissions_section += '</li>';
                            permissions_section += '<li>';
                            permissions_section += '<label for="permission_edit_note">Note:</label>';
                            permissions_section += '<textarea name="permission_edit_note" rows="5" cols="40" class="contract_update">' + p.note + '</textarea>';
                            permissions_section += '</li>';
                            if( p.resources ){
                                permissions_section += '<li><fieldset><legend>Resources</legend><ul>';
                                p.resources.forEach(function(r,index){
                                    permissions_section += '<li data-resource_id="'+r.resource_id+'">' + '<a target="_blank" href="/cgi-bin/koha/catalogue/detail.pl?biblionumber='+ r.biblionumber + '">';
                                    permissions_section += (r.biblio?r.biblio.title:'Title not found');
                                    permissions_section += "(" + r.biblionumber + ")</a>";
                                    permissions_section += (r.biblio?(r.biblio.author?" by "+r.biblio.author:"-"):"-");
                                    permissions_section += '<a class="delete_resource" data-resource_id="'+r.resource_id+'"><i class="fa fa-times"></i></a>';
                                    permissions_section += '</li>';
                                });
                            }
                            permissions_section += '</ul></fieldset></li>';
                            permissions_section += '</ul></fieldset>';
                            permissions_section += '<div id="permission_updated_'+p.permission_id+'"></div>';
                            permissions_section += '<a class="btn btn-default btn-xs delete_permission">Delete</a></div>';
                            permissions_section += '<hr>';
                            permissions_section += '</div>';
                        });
                        $("#permissions_editor").append(permissions_section);
                        $("select.permission_type").each(function(){
                            let init =$(this).data('initial');
                            let typesel = $(this).find('option[value="'+init+'"]');
                            typesel.attr('selected',"selected");
                        });

                        $('.permission_edit_date').flatpickr({
                            altInput: true,
                            altFormat: "m/d/Y",
                            altInputClass: "permission_edit_date flatpickr-input",
                            dateFormat: "Y-m-d"
                        });
           }

        };


        function save_contract(id,contract_number){
            let options = {
                url: '/api/v1/contrib/contracts/contracts/' + id,
                method: "PUT",
                contentType: "application/json",
                data: JSON.stringify({
                    contract_number: contract_number,
                })
            };
            $.ajax(options)
                .then(function(result) {
                    $("#edit_contract_modal").modal('hide');
                    humanMsg.displayAlert( _("Saved contract: ") + contract_number  , { className: 'human Success' } );
                    filters_table.DataTable().ajax.reload();
                })
                .fail(function(err) {
                    humanMsg.displayAlert( _("There was an error during saving:") + err.responseText, { className: 'humanError' } );
                });
        }


    </script>
[% END %]

[% INCLUDE 'intranet-bottom.inc' %]
