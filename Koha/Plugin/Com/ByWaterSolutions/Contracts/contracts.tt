[% USE raw %]
[% USE Asset %]
[% SET footerjs = 1 %]
[% USE AuthorisedValues %]
[% INCLUDE 'doc-head-open.inc' %]
  <title>Koha: Contracts plugin: Search contracts</title>
  [% INCLUDE 'doc-head-close.inc' %]
</head>

<body id="plugin_contracts">
  [% INCLUDE 'header.inc' %]
  [% INCLUDE 'cat-search.inc' %]

<nav id="breadcrumbs" aria-label="Breadcrumb" class="breadcrumb">
    <ol>
        <li>
            <a href="/cgi-bin/koha/mainpage.pl">Home</a>
        </li>
        <li>
            <a href="/cgi-bin/koha/plugins/plugins.pl">Plugins</a>
        </li>
        <li>
            <a href="#" aria-current="page">
                Koha Contracts Plugin
            </a>
        </li>
    </ol>
</nav>

<div class="main container-fluid">
    <div class="row">
        <div class="col-sm-10 col-sm-push-2">
            <main>

        [% IF contracts_count %]
            <div id="contracts_list">
                <h2>Contracts</h2>
                    <a id="new_contract" class="btn btn-default btn-xs" data-contract_id="new" data-contract_number="">
                    <i class="fa fa-plus"></i> New contract
                    </a>
                <table id="contracts_table">
                    <thead>
                        <tr>
                            <th>Contract Id</th>
                            <th>Supplier Id</th>
                            <th>Contract Number</th>
                            <th>Permissions</th>
                            <th>Resources</th>
                            <th>Created On</th>
                            <th>Created By</th>
                            <th>Updated On</th>
                            <th>Updated By</th>
                            <th>&nbsp;</th>
                        </tr>
                    </thead>
                </table>
            </div>
        [% ELSE %]
            <div class="dialog message">
                There are no contracts defined.
            </div>
        [% END %]

            </main>
        </div> <!-- /.col-sm-10.col-sm-push-2 -->

     </div> <!-- /.row -->

    <div id="edit_contract_modal" class="modal" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="closebtn" data-dismiss="modal" aria-hidden="true">x</button>
                <h3 id="search_filters_label">Edit contract: <span id="contract_edit_modal_name"></span</h3>
            </div>
            <div class="modal-body">
                <div class="contract-edit" data-type="update_contract">
                <fieldset class="rows">
                    <legend>Contract</legend>
                    <ul>
                        <li>
                            <input type="hidden" id="contract_edit_id" name="contract_edit_id">
                            <label for="contract_edit_number">Number:</label>
                            <input id="contract_edit_number" name="contract_edit_number" type="text" class="contract_update">
                        </li>
                        <li>
                            <label  for="vendor_select">Copyright holder</label>
                            <select name="vendor_selector" id="vendor_select" class="contract_update">
                            </select>
                        </li>
                    </ul>
                    <div id="contract_updated"></div>
                </fieldset>
                <hr>
                </div>
                <fieldset id="permissions_editor">
                </fieldset>
                <a id="new_permission" class="btn btn-default btn-xs new_permission">Add permission</a>
            </div>
            <div class="modal-footer">
                <a href="#" data-dismiss="modal" aria-hidden="true" class="cancel">Close</a>
            </div>
        </div>
        </div>
    </div>

[% MACRO jsinclude BLOCK %]
    [% Asset.js("js/admin-menu.js") | $raw %]
    [% Asset.css("css/humanmsg.css") | $raw %]
    [% Asset.js("lib/jquery/plugins/humanmsg.js") | $raw %]
    [% INCLUDE 'datatables.inc' %]
    [% INCLUDE 'select2.inc' %]
    [% INCLUDE 'calendar.inc' %]

    <script>
        let filters_table;
        function tempAlert(id,msg,duration) {
            let el = $("#"+id);
            console.log( el );
            el.text(msg);
            setTimeout(function(){
             el.text("");
            },duration);
        }

        $(document).ready(function(){

            ContractFunctions.v_select($("#vendor_select"));
            contracts_table = $("#contracts_table").kohaTable({
                "ajax": {
                    "url": "/api/v1/contrib/contracts/contracts"
                },
                "stateSave": true,
                "embed": ["copyright_holder","permissions.resources.biblio"], 
                "columns": [
                    {
                        "data": "contract_id",
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        "data": "copyright_holder.id:copyright_holder.name:copyright_holder.notes",
                        "searchable": true,
                        "orderable": true,
                        "render": function( data, type, row, meta ) {
                            var supplier = "";
                            if( row.copyright_holder ){
                                let ch = row.copyright_holder;
                                supplier += ch.name;
                                supplier += " ("+ch.id+")</br>";
                                supplier += ch.notes;
                            }
                            return supplier;
                        }
                    },
                    {
                        "data": "contract_number",
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        "data": "permissions.permission_id:permissions.permission_type",
                        "searchable": true,
                        "orderable": true,
                        "render": function( data, type, row, meta ) {
                            var perms ="";
                            row.permissions.forEach(function(e){
                                perms += e.permission_id + " " + e.permission_type + " " + e.permission_code ;
                                [% IF biblionumber %]
                                    let biblionumber="[% biblionumber %]";
                                    let bib_linked = false;
                                    e.resources.forEach(function(r){
                                        if( r.biblionumber == biblionumber ){ bib_linked=true;return false; }
                                    });
                                    if( !bib_linked ){
                                       perms += '<a class="btn btn-default btn-xs link_resource" data-biblionumber="[% biblionumber %]" data-permission_id="'+e.permission_id+'">Link to bib</a>';
                                    }
                                [% END %]
                                perms += '</br><hr>';
                            });
                            return perms;
                        },
                    },
                    {
                        "data": "permissions.resources.biblionumber:permissions.resources.resource_id:permissions.resources.biblio.title",
                        "searchable": true,
                        "orderable": true,
                        "render": function( data, type, row, meta ) {
                            var perms ="";
                            row.permissions.forEach(function(e){
                                e.resources.forEach(function(r){
                                    perms += "Resource " + r.resource_id + ", biblionumber:" + r.biblionumber + "</br>";
                                    if( r.biblio ){
                                        perms += r.biblio.title + "</br>";
                                    }
                                perms += "<hr>";
                                });
                            });
                            return perms;
                        },
                    },
                    {
                        "data": "created_on",
                        "searchable": true,
                        "orderable": true,
                        "render": function( data, type, row, meta ) {
                            return data ? escape_str($date(data)) : "";
                        }
                    },
                    {
                        "data": "created_user",
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        "data": "updated_on",
                        "searchable": true,
                        "orderable": true,
                        "render": function( data, type, row, meta ) {
                            return data ? escape_str($date(data)) : "";
                        }

                    },
                    {
                        "data": "updated_user",
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        "data": function( row, meta, val, type ) {
                            let contract = row;
                            let contract_buttons = '<a class="btn btn-default btn-xs edit_contract" ';
                            contract_buttons += ' data-contract_id="'+ contract.contract_id;
                            contract_buttons += '" data-contract_number="'+ contract.contract_number;
                            contract_buttons += '" ><i class="fa fa-pencil"></i> Edit contract</a>';
                            contract_buttons += '<a class="btn btn-default btn-xs delete_contract" onclick="ContractFunctions.delete_contract(this)"';
                            contract_buttons += ' data-contract_id="'+ contract.contract_id;
                            contract_buttons += '"><i class="fa fa-trash"></i> Delete</a>';
                            return contract_buttons;
                        },
                        "searchable": false,
                        "orderable": false
                    }
                ]
            }, null, 1);

            $("body").on('change', '.contract_update',function() {
                let parent_form = $(this).closest('div');
                let parent_type = parent_form.data('type');
                ContractFunctions[parent_type](parent_form);
            });
            $("body").on('change', 'select.permission_type',function() {
                let parent_form = $(this).closest('div');
                let parent_type = parent_form.data('type');
                console.log( $(this) );
                parent_form.find('input[name=permission_edit_code]').val( $(this).val() );
                ContractFunctions[parent_type](parent_form);
            });
            $("body").on('click', '.contract_update_button',function() {
                let parent_form = $(this).parent('div');
                let parent_type = parent_form.data('type');
                ContractFunctions[parent_type](parent_form);
            });
            $("body").on('click', '.link_resource',function() {
                let permission_id = $(this).data('permission_id');
                let biblionumber = $(this).data('biblionumber');
                ContractFunctions.add_resource(permission_id,biblionumber);
            });
            $("#new_contract").click(function(){
                $("#permissions_editor").html("");
                $("#new_permission").hide();
                ContractFunctions.edit_contract(this);
            });
            $("body").on('click',".edit_contract",function() {
                $("#permissions_editor").html("");
                $("#new_permission").show();
                ContractFunctions.edit_contract(this);
            });
            $("#new_permission").click(function(){
                ContractFunctions.add_permissions([{
                    contract_id  : $(this).data('contract_id'),
                    permission_id: "new",
                    permission_type: "Permission Granted",
                    permission_code: "A1 B1a C1 D2 E1 F1 G2 H2 I1 J1 K3",
                    form_signed: 0,
                    note: ""
                }]);
            });
                

        });

        var ContractFunctions = {

            display_vendor: function (state) {
                var $text;
                $text = $('<span>'+state.text+'</span>');
                return $text;
            },

            v_select: function(element) {

            element.kohaSelect({
                dropdownParent: $("#edit_contract_modal"),
                width: '30%',
                allowClear: false,
                ajax: {
                   url: '/api/v1/acquisitions/vendors',
                   delay: 300,
                   cache: true,
                   dataType: 'json',
                   data: function (params) {
                       var search_term = (params.term === undefined) ? '' : params.term;
                       var cur_p = (params.page === undefined) ? '0' : params.page;
                       var query = {
                           "q": JSON.stringify({"name":{"-like":'%'+search_term+'%'}}),
                           "_order_by": "name",
                           "_page": cur_p
                        };

                        return query;
                    },
                    processResults: function (data) {
                        var results = [];
                        data.results.forEach( function ( vendor ) {
                            results.push(
                                {
                                    "id": "" + vendor.id.escapeHtml(),
                                    "text": vendor.name.escapeHtml()
                                }
                            );
                        });
                        return { "results": results, "pagination": { "more": data.pagination.more } };
                    }
                },
                templateResult: ContractFunctions.display_vendor
            });
               return element;
            },
            add_resource: function(permission_id,biblionumber){
                let options = {
                    url: '/api/v1/contrib/contracts/resources/',
                    method: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({
                        permission_id: permission_id,
                        biblionumber: biblionumber
                    })
                };
                $.ajax(options)
                    .then(function(result) {
                        humanMsg.displayAlert( _("Resource successfuly linked."), { className: 'human Success' } );
                        contracts_table.DataTable().ajax.reload();

                    })
                    .fail(function(err) {
                        humanMsg.displayAlert( _("There was an error linking the resource") + err.responseText, { className: 'humanError' } );
                    });
            },

            edit_contract:  function(element){
                let contract_id = $(element).data('contract_id');
                let contract_number = $(element).data('contract_number');

                if ( contract_id != "new" ){
                let options = {
                    url: '/api/v1/contrib/contracts/contracts',
                    method: "GET",
                    contentType: "application/json",
                    headers: { 'x-koha-embed': ["permissions","copyright_holder"] },
                    data: 'q=[{"me.contract_id":'+contract_id+'}]'
                };
                $.ajax(options)
                    .then(function(result) {
                        result = result[0];
                        $("#contract_edit_number").val(result.contract_number);
                        $("#contract_edit_id").val(result.contract_id);
                        if(result.copyright_holder){
                        $("#vendor_select").select2('destroy');
                            $("#vendor_select").html(''); 
                            $("#vendor_select").append('<option value="'+result.supplier_id+'" selected="selected">'+result.copyright_holder.name+'</option>');
                        ContractFunctions.v_select($("#vendor_select"));
                        }
                        ContractFunctions.add_permissions( result.permissions );
                        $("#new_permission").data('contract_id',result.contract_id).show();
                        $("#edit_contract_modal").modal('show');

                    })
                    .fail(function(err) {
                        humanMsg.displayAlert( _("There was an error fetching the contract") + err.responseText, { className: 'humanError' } );
                    });
                } else {
                        $("#contract_edit_number").val("new");
                        $("#contract_edit_id").val("new");
                        $("#edit_contract_modal").modal('show');
                }

            },

            delete_contract: function(element){
                let contract_id = $(element).data('contract_id');
                let options = {
                    url: '/api/v1/contrib/contracts/contracts/' + contract_id,
                    method: "DELETE",
                    contentType: "application/json",
                };
                $.ajax(options)
                    .then(function(result) {
                        humanMsg.displayAlert( _("Contract successfully deleted."), { className: 'human Success' } );
                        contracts_table.DataTable().ajax.reload();
                    })
                    .fail(function(err) {
                        humanMsg.displayAlert( _("There was an error during deletion:") + err.responseText, { className: 'humanError' } );
                    });
            },

            update_contract: function(element){
                let contract_id = $(element).find('input[name="contract_edit_id"]').val();
                var url = '/api/v1/contrib/contracts/contracts';
                var method = "PUT";
                if( contract_id == 'new' ){
                    method = "POST";
                } else {
                    url = url + '/' + contract_id
                }
                let contract_number = $(element).find('input[name="contract_edit_number"]').val();
                let supplier_id =     $(element).find('#vendor_select').val();
                let options = {
                    url: url,
                    method: method,
                    contentType: "application/json",
                    data: JSON.stringify({
                        contract_number: contract_number,
                        supplier_id: supplier_id?supplier_id:"",
                    })
                };
                $.ajax(options)
                    .then(function(result) {
                        $(element).find('input[name="contract_edit_id"]').val(result.contract_id);
                        if( method == 'POST' ){
                            $("#new_permission").data('contract_id',result.contract_id).show();
                        }
                        tempAlert("contract_updated","Contract updated",1000);
                        contracts_table.DataTable().ajax.reload();
                    })
                    .fail(function(err) {
                        humanMsg.displayAlert( _("There was an error during update:") + err.responseText, { className: 'humanError' } );
                    });
            },

            update_permission: function(element){
                let permission_id = $(element).find('input[name="permission_edit_id"]').val();
                var url = '/api/v1/contrib/contracts/permissions';
                var method = "PUT";
                if( permission_id == 'new' ){
                    method = "POST";
                } else {
                    url = url + '/' + permission_id
                }
                let contract_id = $(element).find('input[name="contract_edit_id"]').val();
                let permission_type = $(element).find('select[name="permission_edit_type"] option:selected').text();
                let permission_code = $(element).find('input[name="permission_edit_code"]').val();
                let permission_date = $(element).find('input[name="permission_edit_date"]').val();
                console.log( permission_date);
                let contract_signed = $(element).find('input[name="permission_edit_signed"]').is(':checked')?1:0;
                let note            = $(element).find('input[name="permission_edit_note"]').val();
                let options = {
                    url: url,
                    method: method,
                    contentType: "application/json",
                    data: JSON.stringify({
                        contract_id    : contract_id,
                        permission_type: permission_type,
                        permission_date: permission_date,
                        permission_code: permission_code,
                        form_signed:     contract_signed,
                        note:            note
                    })
                };
                $.ajax(options)
                    .then(function(result) {
                        $(element).find('input[name="permission_edit_id"]').val(result.permission_id);
                        tempAlert("permission_updated_"+permission_id,"Permission updated",1000);
                        contracts_table.DataTable().ajax.reload(null,false);
                    })
                    .fail(function(err) {
                        humanMsg.displayAlert( _("There was an error during update:") + err.responseText, { className: 'humanError' } );
                    });
            },

            add_permissions: function( permissions ){
                        [% SET perm_types = AuthorisedValues.GetAuthValueDropbox( 'PERMISSION_TYPES' ) %]
                        [% IF perm_types.count %]
                            [% SET perm_dropdown = '' %]
                            [% FOREACH perm IN perm_types %]
                                 [% perm_dropdown = perm_dropdown _ '<option value="' _ perm.authorised_value _ '">' _ perm.lib _ '</option>' %]
                            [% END %]
                            [% SET perm_dropdown = perm_dropdown _ '</select>' %]
                        [% ELSE %]
                            [% SET perm_dropdown = '<input class="permission_type" class="contract_updated">' %]
                        [% END %]

                        let permissions_section = '<hr>';
                        permissions.forEach(function(p,index){
                            permissions_section += '<div class="permission-edit" data-type="update_permission">';
                            permissions_section += '<fieldset class="rows"><legend>Permissions</legend><ul>';
                            permissions_section += '<input type="hidden" id="contract_edit_id" name="contract_edit_id" value="'+p.contract_id+'">';
                            permissions_section += '<input type="hidden" class="permission_edit_id" name="permission_edit_id" value="'+p.permission_id+'">';
                            permissions_section += '<li>';
                            permissions_section += '<label for="permission_edit_type">Permission type:</label>';
                            permissions_section += '<select class="permission_type" name="permission_edit_type" data-initial="'+p.permission_code+'">'
                            permissions_section += '[% perm_dropdown %]'
                            permissions_section += '</li>';
                            permissions_section += '<li>';
                            permissions_section += '<label for="permission_edit_code">Permission Code:</label>';
                            permissions_section += '<input name="permission_edit_code" type="text" class="contract_update permission_edit_code" value="'+p.permission_code +'">';
                            permissions_section += '</li>';
                            permissions_section += '<li>';
                            permissions_section += '<label for="permission_edit_date">Permission date:</label>';
                            permissions_section += '<input name="permission_edit_date" type="text" class="contract_update permission_edit_date" value="'+p.permission_date +'">';
                            permissions_section += '</li>';
                            permissions_section += '<li>';
                            permissions_section += '<label for="permission_edit_signed">Contract signed:</label>';
                            let checked = p.form_signed?'checked="checked"':'';
                            permissions_section += '<input name="permission_edit_signed" type="checkbox" ' +checked + ' class="contract_update">';
                            permissions_section += '</li>';
                            permissions_section += '<li>';
                            permissions_section += '<label for="permission_edit_note">Note:</label>';
                            permissions_section += '<textarea name="permission_edit_note" rows="5" cols="40" class="contract_update"></textarea>';
                            permissions_section += '</li>';
                            permissions_section += '</ul></fieldset>';
                            permissions_section += '<div id="permission_updated_'+p.permission_id+'"></div>';
                            permissions_section += '<a id="delete_existing_permission" class="btn btn-default btn-xs">Delete</a></div>';
                            permissions_section += '<hr>';
                            permissions_section += '</div>';
                        });
                        $("#permissions_editor").append(permissions_section);
                        $("select.permission_type").each(function(){
                            let init =$(this).data('initial');
                            let typesel = $(this).find('option[value="'+init+'"]');
                            typesel.attr('selected',"selected");
                        });

                        $('.permission_edit_date').flatpickr({
                            altInput: true,
                            altFormat: "m/d/Y",
                            altInputClass: "permission_edit_date flatpickr-input",
                            dateFormat: "Y-m-d"
                        });
           }

        };


        function save_contract(id,contract_number){
            let options = {
                url: '/api/v1/contrib/contracts/contracts/' + id,
                method: "PUT",
                contentType: "application/json",
                data: JSON.stringify({
                    contract_number: contract_number,
                })
            };
            $.ajax(options)
                .then(function(result) {
                    $("#edit_contract_modal").modal('hide');
                    humanMsg.displayAlert( _("Saved contract: ") + contract_number  , { className: 'human Success' } );
                    filters_table.DataTable().ajax.reload();
                })
                .fail(function(err) {
                    humanMsg.displayAlert( _("There was an error during saving:") + err.responseText, { className: 'humanError' } );
                });
        }


    </script>
[% END %]

[% INCLUDE 'intranet-bottom.inc' %]
